<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper
        namespace="com.zebrunner.reporting.persistence.dao.mysql.application.TestMapper">

    <insert id="createTest" useGeneratedKeys="true" keyProperty="id">
		<![CDATA[
			INSERT INTO TESTS (UUID, NAME, STATUS, TEST_ARGS, TEST_RUN_ID, TEST_CASE_ID, TEST_GROUP, MESSAGE, MESSAGE_HASH_CODE, START_TIME, FINISH_TIME, RETRY, TEST_CONFIG_ID, KNOWN_ISSUE, BLOCKER, NEED_RERUN, DEPENDS_ON_METHODS, CI_TEST_ID)
			VALUES (
			    #{uuid},
				#{name},
			    #{status},
			    #{testArgs},
			    #{testRunId},
			    #{testCaseId},
			    #{testGroup},
			    #{message},
			    #{messageHashCode},
			    #{startTime},
			    #{finishTime},
			    #{retry},
			    #{testConfig.id},
			    #{knownIssue},
			    #{blocker},
			    #{needRerun},
			    #{dependsOnMethods},
			    #{ciTestId}
			)
		]]>
	</insert>

    <insert id="createTestWorkItem" useGeneratedKeys="true">
		<![CDATA[
        INSERT INTO TEST_WORK_ITEMS (TEST_ID, WORK_ITEM_ID)
        VALUES (#{test.id},
                #{workItem.id})
        ON CONFLICT DO NOTHING
        ]]>
	</insert>

    <insert id="addTags">
        <![CDATA[
          INSERT INTO TEST_TAGS (TAG_ID, TEST_ID) VALUES
        ]]>
        <foreach item="tag" index="index" collection="tags" open=""
                 separator="," close="">
            <![CDATA[
 		    (
 		    	#{tag.id},
 		    	#{testId}
 		    )
          ]]>
        </foreach>
        <![CDATA[
 		    ON CONFLICT DO NOTHING
          ]]>
    </insert>

    <delete id="deleteTestByTestRunIdAndNameAndStatus">
		<![CDATA[
        DELETE
        FROM TESTS
        WHERE TEST_RUN_ID = #{testRunId}
          AND NAME = #{testName}
          AND STATUS = #{status};
        ]]>
	</delete>

    <delete id="deleteTestWorkItemByWorkItemIdAndTestId">
		<![CDATA[
        DELETE
        FROM TEST_WORK_ITEMS
        WHERE WORK_ITEM_ID = #{workItemId}
          AND TEST_ID = #{testId}
        ]]>
	</delete>

    <delete id="deleteTestWorkItemByTestIdAndWorkItemType">
		<![CDATA[
        DELETE
        FROM TEST_WORK_ITEMS
        WHERE TEST_ID = #{testId}
          AND WORK_ITEM_ID IN
              (SELECT WI.ID
               FROM WORK_ITEMS WI
                        INNER JOIN TEST_WORK_ITEMS TWI ON WI.ID = TWI.WORK_ITEM_ID
               WHERE WI.TYPE = #{type})
        ]]>
	</delete>

    <delete id="deleteTestWorkItemByTestId">
		<![CDATA[
        DELETE
        FROM TEST_WORK_ITEMS
        WHERE TEST_ID = #{testId}
        ]]>
	</delete>

    <sql id="getTest">
		<![CDATA[
			SELECT
				T.ID AS TEST_ID,
			    T.UUID AS TEST_UUID,
				T.NAME AS TEST_NAME,
				T.STATUS AS TEST_STATUS,
				T.TEST_ARGS AS TEST_TEST_ARGS,
				T.TEST_RUN_ID AS TEST_TEST_RUN_ID,
				T.TEST_CASE_ID AS TEST_TEST_CASE_ID,
				T.TEST_GROUP AS TEST_TEST_GROUP,
				T.MESSAGE AS TEST_MESSAGE,
				T.MESSAGE_HASH_CODE AS TEST_MESSAGE_HASH_CODE,
				T.START_TIME AS TEST_START_TIME,
				T.FINISH_TIME AS TEST_FINISH_TIME,
				T.RETRY AS TEST_RETRY,
				T.KNOWN_ISSUE AS TEST_KNOWN_ISSUE,
				T.BLOCKER AS TEST_BLOCKER,
				T.NEED_RERUN AS TEST_NEED_RERUN,
				T.DEPENDS_ON_METHODS AS TEST_DEPENDS_ON_METHODS,
				T.CI_TEST_ID AS TEST_CI_TEST_ID,
				TCU.USERNAME AS TEST_OWNER,
				SO.USERNAME AS TEST_SECONDARY_OWNER,
				TCS.TEST_CLASS AS TEST_TEST_CLASS,
				T.MODIFIED_AT AS TEST_MODIFIED_AT,
				T.CREATED_AT AS TEST_CREATED_AT,

				TR.CI_RUN_ID AS TEST_RUN_CI_RUN_ID,

				WI.ID AS WORK_ITEM_ID,
				WI.JIRA_ID AS WORK_ITEM_JIRA_ID,
				WI.TYPE AS WORK_ITEM_TYPE,
				WI.HASH_CODE AS WORK_ITEM_HASH_CODE,
				WI.DESCRIPTION AS WORK_ITEM_DESCRIPTION,
				WI.BLOCKER AS WORK_ITEM_BLOCKER,
				WI.TEST_CASE_ID AS WORK_ITEM_TEST_CASE_ID,
				WI.MODIFIED_AT AS WORK_ITEM_MODIFIED_AT,
				WI.CREATED_AT AS WORK_ITEM_CREATED_AT,
				
				U.ID AS USER_ID,
				U.USERNAME AS USER_USERNAME,
				U.PASSWORD AS USER_PASSWORD,
				U.FIRST_NAME AS USER_FIRST_NAME,
				U.LAST_NAME AS USER_LAST_NAME,
				U.EMAIL AS USER_EMAIL,
				U.MODIFIED_AT AS USER_MODIFIED_AT,
				U.CREATED_AT AS USER_CREATED_AT,
				
				TC.ID AS TEST_TEST_CONFIG_ID,
				TC.URL AS TEST_TEST_CONFIG_URL,
				TC.ENV AS TEST_TEST_CONFIG_ENV,
				TC.PLATFORM AS TEST_TEST_CONFIG_PLATFORM,
				TC.PLATFORM_VERSION AS TEST_TEST_CONFIG_PLATFORM_VERSION,
				TC.BROWSER AS TEST_TEST_CONFIG_BROWSER,
				TC.BROWSER_VERSION AS TEST_TEST_CONFIG_BROWSER_VERSION,
				TC.APP_VERSION AS TEST_TEST_CONFIG_APP_VERSION,
				TC.LOCALE AS TEST_TEST_CONFIG_LOCALE,
				TC.LANGUAGE AS TEST_TEST_CONFIG_LANGUAGE,
				TC.DEVICE AS TEST_TEST_CONFIG_DEVICE,
				TC.MODIFIED_AT AS TEST_TEST_CONFIG_MODIFIED_AT,
				TC.CREATED_AT AS TEST_TEST_CONFIG_CREATED_AT,
        		TA.ID          AS TEST_ARTIFACT_ID,
		        TA.NAME        AS TEST_ARTIFACT_NAME,
		        TA.LINK        AS TEST_ARTIFACT_LINK,
		        TA.TEST_ID     AS TEST_ARTIFACT_TEST_ID,
		        TA.MODIFIED_AT AS TEST_ARTIFACT_MODIFIED_AT,
		        TA.CREATED_AT  AS TEST_ARTIFACT_CREATED_AT,

		        TG.ID AS TAG_ID,
				TG.NAME AS TAG_NAME,
				TG.VALUE AS TAG_VALUE,
				TG.CREATED_AT AS TAG_CREATED_AT,
				TG.MODIFIED_AT AS TAG_MODIFIED_AT

		        FROM
				TESTS T
			LEFT JOIN
				TEST_WORK_ITEMS TWI
		        ON 
		            	TWI.TEST_ID = T.ID
			LEFT JOIN
				WORK_ITEMS WI
		    ON
		        WI.ID = TWI.WORK_ITEM_ID
		    LEFT JOIN
				USERS U
		    ON
		        WI.USER_ID = U.ID
			LEFT JOIN 
				TEST_CONFIGS TC
			ON 
				T.TEST_CONFIG_ID = TC.ID
			LEFT JOIN
				TEST_CASES TCS
			ON
				T.TEST_CASE_ID = TCS.ID
			LEFT JOIN
				TEST_RUNS TR
			ON
				T.TEST_RUN_ID = TR.ID
			LEFT JOIN
				USERS TCU
			ON
				TCS.PRIMARY_OWNER_ID = TCU.ID
			LEFT JOIN
				USERS SO
			ON
				TCS.SECONDARY_OWNER_ID = SO.ID
	        LEFT JOIN
		        TEST_ARTIFACTS TA
	      	ON
		        TA.TEST_ID = T.ID
			LEFT JOIN
				TEST_TAGS TT
			ON
				T.ID = TT.TEST_ID
			LEFT JOIN
				TAGS TG
			ON
				TT.TAG_ID = TG.ID
        ]]>
	</sql>

    <select id="getTestById" resultMap="TestResultMap">
        <include refid="getTest"/>
        <![CDATA[
			WHERE T.ID = #{id};
		]]>
    </select>

	<select id="getTestByTestRunIdAndUuid" resultMap="TestResultMap">
		<include refid="getTest" />
		<![CDATA[
			WHERE T.TEST_RUN_ID = #{testRunId} AND T.UUID = #{uuid} AND T.UUID IS NOT NULL;
		]]>
	</select>

	<select id="getTestByIdAndTestRunId" resultMap="TestResultMap">
		<include refid="getTest" />
		<![CDATA[
			 WHERE T.ID = #{id} AND T.TEST_RUN_ID = #{testRunId};
		]]>
    </select>

    <select id="existsTestByIdAndTestRunId" resultType="java.lang.Boolean">
		<![CDATA[
			SELECT EXISTS (
			   SELECT * FROM TESTS T
			   WHERE
				   T.ID = #{id} AND T.TEST_RUN_ID = #{testRunId}
		   )
		]]>
	</select>

    <select id="getTestByName" resultMap="TestResultMap">
        <include refid="getTest"/>
        <![CDATA[
			WHERE T.NAME = #{name};
		]]>
    </select>

    <select id="getTestsByTestRunId" resultMap="TestResultMap">
        <include refid="getTest"/>
        <![CDATA[
			WHERE T.TEST_RUN_ID = #{testRunId};
		]]>
    </select>

    <select id="getTestsByTestRunCiRunId" resultMap="TestResultMap">
        <include refid="getTest"/>
        <![CDATA[
			WHERE TR.CI_RUN_ID = #{testRunCiRunId};
		]]>
    </select>

    <select id="getTestsByTestRunIdAndStatus"
            resultMap="TestResultMap">
        <include refid="getTest"/>
        <![CDATA[
			WHERE T.TEST_RUN_ID = #{testRunId} AND T.STATUS =  #{status};
		]]>
    </select>

    <select id="getTestsByWorkItemId" resultMap="TestResultMap">
        <include refid="getTest"/>
        <![CDATA[
			WHERE WI.ID = #{workItemId};
		]]>
    </select>

    <sql id="getTestResults">
		<![CDATA[
        SELECT T.ID            AS TEST_ID,
               T.STATUS        AS TEST_STATUS,
               T.START_TIME    AS TEST_START_TIME,
               T.FINISH_TIME   AS TEST_FINISH_TIME,
               T.TEST_RUN_ID   AS TEST_TEST_RUN_ID,

               WI.ID           AS WORK_ITEM_ID,
               WI.JIRA_ID      AS WORK_ITEM_JIRA_ID,
               WI.TYPE         AS WORK_ITEM_TYPE,
               WI.HASH_CODE    AS WORK_ITEM_HASH_CODE,
               WI.DESCRIPTION  AS WORK_ITEM_DESCRIPTION,
               WI.BLOCKER      AS WORK_ITEM_BLOCKER,
               WI.TEST_CASE_ID AS WORK_ITEM_TEST_CASE_ID

        FROM TESTS T
                 LEFT JOIN
             TEST_WORK_ITEMS TWI
             ON
                 TWI.TEST_ID = T.ID
                 LEFT JOIN
             WORK_ITEMS WI
             ON
                 WI.ID = TWI.WORK_ITEM_ID
        ]]>
	</sql>

    <select id="getTestResultsByStartTimeAndTestCaseId" resultMap="TestResultsResultMap">
        <include refid="getTestResults"/>
        <![CDATA[
			WHERE T.TEST_CASE_ID = #{testCaseId} AND T.START_TIME::date <= #{startTime}::date
			ORDER BY T.START_TIME DESC
            LIMIT #{limit}
		]]>
    </select>

    <select id="searchTests" resultMap="TestResultMap">
        <include refid="getTest"/>
        <trim prefix="WHERE" prefixOverrides="AND |OR ">
            <if test="null != testRunIds and testRunIds.size > 0">
                <![CDATA[
	               AND T.TEST_RUN_ID IN
	            ]]>
                <foreach item="testRunId" index="index"
                         collection="testRunIds" open="(" separator="," close=")">
                    #{testRunId}
                </foreach>
            </if>
            <if test="null != testRunId">
                <![CDATA[
					AND T.TEST_RUN_ID = #{testRunId}
				]]>
            </if>
            <if test="null != testCaseId">
                <![CDATA[
					AND T.TEST_CASE_ID = #{testCaseId}
				]]>
            </if>
        </trim>
        <if test="sortOrder.toString() == 'ASC'">
            <![CDATA[
				ORDER BY T.ID ASC
			]]>
        </if>
        <if test="sortOrder.toString() == 'DESC'">
            <![CDATA[
				ORDER BY T.ID DESC
			]]>
        </if>
        <![CDATA[
			LIMIT #{pageSize} OFFSET #{offset}
		]]>
    </select>

    <select id="getTestsSearchCount" resultType="java.lang.Integer">
        <![CDATA[
            SELECT
                COUNT(*)
            FROM
                TESTS T
        ]]>
        <trim prefix="WHERE" prefixOverrides="AND |OR ">
            <if test="null != testRunIds and testRunIds.size > 0">
                <![CDATA[
	               AND T.TEST_RUN_ID IN
	            ]]>
                <foreach item="testRunId" index="index"
                         collection="testRunIds" open="(" separator="," close=")">
                    #{testRunId}
                </foreach>
            </if>
            <if test="null != testRunId">
                <![CDATA[
					AND T.TEST_RUN_ID = #{testRunId}
				]]>
            </if>
            <if test="null != testCaseId">
                <![CDATA[
					AND T.TEST_CASE_ID = #{testCaseId}
				]]>
            </if>
        </trim>
    </select>

    <update id="updateTest">
        <![CDATA[
			UPDATE
			    TESTS
			SET
				NAME = #{name},
				STATUS = #{status},
				TEST_ARGS = #{testArgs},
				TEST_RUN_ID = #{testRunId},
				TEST_CASE_ID = #{testCaseId},
				TEST_GROUP = #{testGroup},
				MESSAGE = #{message},
				MESSAGE_HASH_CODE = #{messageHashCode},
				START_TIME = #{startTime},
				FINISH_TIME = #{finishTime},
		]]>
        <if test="null != testConfig and null != testConfig.id">
            <![CDATA[
               TEST_CONFIG_ID = #{testConfig.id},
            ]]>
        </if>
        <if test="null != ciTestId">
            <![CDATA[
               CI_TEST_ID = #{ciTestId},
            ]]>
        </if>
        <![CDATA[
				RETRY = #{retry},
				KNOWN_ISSUE = #{knownIssue},
				BLOCKER = #{blocker},
				NEED_RERUN = #{needRerun},
				DEPENDS_ON_METHODS = #{dependsOnMethods}
			WHERE
			    ID = #{id}
		]]>
    </update>

    <update id="updateStatuses">
        <![CDATA[
			UPDATE
			    TESTS
			SET
				STATUS = #{status}
			FROM
    			(SELECT UNNEST(ARRAY[
		]]>
        <foreach item="id" index="index" collection="ids" open="" separator="," close="">
            <![CDATA[
			     #{id}
			]]>
        </foreach>
        <![CDATA[
			]) AS id) AS test_data
				WHERE TESTS.ID = test_data.id;
		]]>
    </update>

    <update id="updateTestsNeedRerun">
        <if test="null != ids and ids.size > 0">
            <![CDATA[
			UPDATE
			    TESTS
			SET
				NEED_RERUN = #{rerun}
				    			WHERE
				ID
			IN
	        ]]>
            <foreach item="id" index="index" collection="ids" open="("
                     separator="," close=");">
                #{id}
            </foreach>
        </if>
    </update>

    <sql id="deleteTest">
		<![CDATA[
        DELETE
        FROM TESTS
        WHERE ID = #{id}
        ]]>
	</sql>

    <delete id="deleteTest">
        <include refid="deleteTest"/>
    </delete>

    <delete id="deleteTestById">
        <include refid="deleteTest"/>
    </delete>

    <delete id="deleteTag">
		<![CDATA[
        DELETE
        FROM TEST_TAGS
        WHERE TEST_ID = #{testId}
          AND TAG_ID = #{tagId}
        ]]>
	</delete>

    <delete id="deleteTags">
		<![CDATA[
        DELETE
        FROM TEST_TAGS
        WHERE TEST_ID = #{testId}
        ]]>
	</delete>

	<resultMap type="com.zebrunner.reporting.domain.db.Test"
		id="TestResultMap" autoMapping="false">
		<id column="TEST_ID" property="id" />
		<result column="TEST_UUID" property="uuid" />
		<result column="TEST_NAME" property="name" />
		<result column="TEST_STATUS" property="status" />
		<result column="TEST_TEST_ARGS" property="testArgs" />
		<result column="TEST_TEST_RUN_ID" property="testRunId" />
		<result column="TEST_TEST_CASE_ID" property="testCaseId" />
		<result column="TEST_TEST_GROUP" property="testGroup" />
		<result column="TEST_MESSAGE" property="message" />
		<result column="TEST_MESSAGE_HASH_CODE"
			property="messageHashCode" />
		<result column="TEST_START_TIME" property="startTime" />
		<result column="TEST_FINISH_TIME" property="finishTime" />
		<result column="TEST_RETRY" property="retry" />
		<result column="TEST_KNOWN_ISSUE" property="knownIssue" />
		<result column="TEST_BLOCKER" property="blocker" />
		<result column="TEST_NEED_RERUN" property="needRerun" />
		<result column="TEST_DEPENDS_ON_METHODS"
			property="dependsOnMethods" />
		<result column="TEST_OWNER" property="owner" />
		<result column="TEST_SECONDARY_OWNER" property="secondaryOwner" />
		<result column="TEST_TEST_CLASS" property="testClass" />
		<result column="TEST_CI_TEST_ID" property="ciTestId" />
		<result column="TEST_MODIFIED_AT" property="modifiedAt" />
		<result column="TEST_CREATED_AT" property="createdAt" />

		<result column="TEST_TEST_CONFIG_ID" property="testConfig.id" />
		<result column="TEST_TEST_CONFIG_URL" property="testConfig.url" />
		<result column="TEST_TEST_CONFIG_ENV" property="testConfig.env" />
		<result column="TEST_TEST_CONFIG_PLATFORM"
			property="testConfig.platform" />
		<result column="TEST_TEST_CONFIG_PLATFORM_VERSION"
			property="testConfig.platformVersion" />
		<result column="TEST_TEST_CONFIG_BROWSER"
			property="testConfig.browser" />
		<result column="TEST_TEST_CONFIG_BROWSER_VERSION"
			property="testConfig.browserVersion" />
		<result column="TEST_TEST_CONFIG_APP_VERSION"
			property="testConfig.appVersion" />
		<result column="TEST_TEST_CONFIG_LOCALE"
			property="testConfig.locale" />
		<result column="TEST_TEST_CONFIG_LANGUAGE"
			property="testConfig.language" />
		<result column="TEST_TEST_CONFIG_DEVICE"
			property="testConfig.device" />
		<result column="TEST_TEST_CONFIG_MODIFIED_AT"
			property="testConfig.modifiedAt" />
		<result column="TEST_TEST_CONFIG_CREATED_AT"
			property="testConfig.createdAt" />

		<collection property="workItems"
			ofType="com.zebrunner.reporting.domain.db.workitem.WorkItem"
			resultMap="com.zebrunner.reporting.persistence.dao.mysql.application.WorkItemMapper.WorkItemResultMap" />

		<collection property="artifacts"
			ofType="com.zebrunner.reporting.domain.db.TestArtifact"
			resultMap="com.zebrunner.reporting.persistence.dao.mysql.application.TestArtifactMapper.TestArtifactResultMap" />

		<collection property="tags"
			ofType="com.zebrunner.reporting.domain.db.Tag"
			resultMap="com.zebrunner.reporting.persistence.dao.mysql.application.TagMapper.TagResultMap" />

	</resultMap>

    <resultMap type="com.zebrunner.reporting.domain.db.TestResult" id="TestResultsResultMap" autoMapping="false">
        <id column="TEST_ID" property="testId"/>
        <result column="TEST_TEST_RUN_ID" property="testRunId" />
        <result column="TEST_STATUS" property="status"/>
        <result column="TEST_START_TIME" property="startTime"/>
        <result column="TEST_FINISH_TIME" property="finishTime"/>

        <collection property="workItems"
                    ofType="com.zebrunner.reporting.domain.db.workitem.WorkItem"
                    resultMap="com.zebrunner.reporting.persistence.dao.mysql.application.WorkItemMapper.WorkItemResultMap"/>

    </resultMap>

</mapper>
