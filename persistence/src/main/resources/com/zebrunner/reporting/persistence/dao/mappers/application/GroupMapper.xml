<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper
	namespace="com.zebrunner.reporting.persistence.dao.mysql.application.GroupMapper">
	<insert id="createGroup" useGeneratedKeys="true"
		keyProperty="id">
        <![CDATA[
          INSERT INTO GROUPS(NAME, ROLE)
          VALUES (
            #{name},
            #{role}
          )
        ]]>
	</insert>

	<insert id="addPermissionsToGroup">
		<if test="null != permissions and permissions.size() > 0">
            <![CDATA[
              INSERT INTO GROUP_PERMISSIONS(GROUP_ID, PERMISSION_ID)
              VALUES
            ]]>
			<foreach item="permission" index="index"
				collection="permissions" open="" separator="," close=";">
                    <![CDATA[
                        (
                            #{groupId},
                            #{permission.id}
                        )
                    ]]>
			</foreach>
		</if>
	</insert>

	<sql id="getGroup">
        <![CDATA[
			SELECT
				G.ID AS GROUP_ID,
				G.NAME AS GROUP_NAME,
				G.ROLE AS GROUP_ROLE,
				G.INVITABLE AS GROUP_INVITABLE,
				G.MODIFIED_AT AS GROUP_MODIFIED_AT,
				G.CREATED_AT AS GROUP_CREATED_AT,
				U.ID AS USER_ID,
				U.USERNAME AS USER_USERNAME,
				U.PASSWORD AS USER_PASSWORD,
				U.FIRST_NAME AS USER_FIRST_NAME,
				U.LAST_NAME AS USER_LAST_NAME,
				U.EMAIL AS USER_EMAIL,
				U.COVER_PHOTO_URL AS USER_COVER_PHOTO_URL,
				U.MODIFIED_AT AS USER_MODIFIED_AT,
				U.CREATED_AT AS USER_CREATED_AT,

				P.ID AS PERMISSION_ID,
				P.NAME AS PERMISSION_NAME,
				P.BLOCK AS PERMISSION_BLOCK,
				P.MODIFIED_AT AS PERMISSION_MODIFIED_AT,
				P.CREATED_AT AS PERMISSION_CREATED_AT
			FROM
				GROUPS G
			LEFT JOIN
				USER_GROUPS UG
			ON
				G.ID = UG.GROUP_ID
			LEFT JOIN
				USERS U
			ON
				UG.USER_ID = U.ID
            LEFT JOIN
                GROUP_PERMISSIONS GP
            ON
                GP.GROUP_ID = G.ID
            LEFT JOIN
                PERMISSIONS P
            ON
                P.ID = GP.PERMISSION_ID
		]]>
	</sql>

	<sql id="getPublicGroupsInfo">
        <![CDATA[
			SELECT
				G.ID AS GROUP_ID,
				G.NAME AS GROUP_NAME,
				G.ROLE AS GROUP_ROLE,
				G.INVITABLE AS GROUP_INVITABLE,

				U.ID AS USER_ID,
				U.USERNAME AS USER_USERNAME,
				U.FIRST_NAME AS USER_FIRST_NAME,
				U.LAST_NAME AS USER_LAST_NAME,
				U.EMAIL AS USER_EMAIL,
				U.COVER_PHOTO_URL AS USER_COVER_PHOTO_URL
			FROM
				GROUPS G
			LEFT JOIN
				USER_GROUPS UG
			ON
				G.ID = UG.GROUP_ID
			LEFT JOIN
				USERS U
			ON
				UG.USER_ID = U.ID
		]]>
	</sql>

	<sql id="getCount">
        <![CDATA[
			SELECT
				COUNT(*)
			FROM
				GROUPS G
		]]>
	</sql>

	<select id="getGroupsCount" resultType="java.lang.Integer">
		<include refid="getCount" />
        <![CDATA[
			WHERE
              G.INVITABLE = TRUE
		]]>
	</select>

	<select id="getAllGroups" resultMap="GroupResultMap">
		<if test="publicDetails">
			<include refid="getPublicGroupsInfo" />
            <![CDATA[
			  WHERE G.INVITABLE = TRUE;
		    ]]>
		</if>
		<if test="! publicDetails">
			<include refid="getGroup" />
		</if>
	</select>

	<select id="getGroupById" resultMap="GroupResultMap">
		<include refid="getGroup" />
        <![CDATA[
			WHERE G.ID = #{id};
		]]>
	</select>

	<select id="getGroupByName" resultMap="GroupResultMap">
		<include refid="getGroup" />
        <![CDATA[
			WHERE G.NAME = #{name};
		]]>
	</select>

	<select id="getPrimaryGroupByRole" resultMap="GroupResultMap">
        <![CDATA[
        	SELECT
				G.ID AS GROUP_ID,
				G.NAME AS GROUP_NAME,
				G.ROLE AS GROUP_ROLE,
				G.INVITABLE AS GROUP_INVITABLE,
				G.MODIFIED_AT AS GROUP_MODIFIED_AT,
				G.CREATED_AT AS GROUP_CREATED_AT
			FROM
				GROUPS G
			WHERE 
				G.ROLE = #{role}
			ORDER BY ID ASC
			LIMIT 1
		]]>
	</select>

	<update id="updateGroup">
        <![CDATA[
			UPDATE
			    GROUPS
		]]>
		<set>
			<if test="null != name">
                <![CDATA[
		               NAME = #{name},
		            ]]>
			</if>
			<if test="null != role">
                <![CDATA[
		               ROLE = #{role}
		            ]]>
			</if>
		</set>
        <![CDATA[
			WHERE
			    ID = #{id}
		]]>
	</update>

	<sql id="deleteGroup">
        <![CDATA[
			DELETE FROM GROUPS
		]]>
	</sql>

	<delete id="deleteGroup">
		<include refid="deleteGroup" />
        <![CDATA[
			WHERE ID = #{id}
		]]>
	</delete>

	<delete id="deletePermissionFromGroup">
        <![CDATA[
            DELETE FROM GROUP_PERMISSIONS
			    WHERE GROUP_ID = #{groupId} AND PERMISSION_ID = #{permissionId}
		]]>
	</delete>

	<resultMap type="com.zebrunner.reporting.domain.db.Group"
		id="GroupResultMap" autoMapping="false">
		<id column="GROUP_ID" property="id" />
		<result column="GROUP_NAME" property="name" />
		<result column="GROUP_ROLE" property="role" />
		<result column="GROUP_INVITABLE" property="invitable" />

		<result column="GROUP_MODIFIED_AT" property="modifiedAt" />
		<result column="GROUP_CREATED_AT" property="createdAt" />
		<collection property="users"
			ofType="com.zebrunner.reporting.domain.db.User"
			resultMap="com.zebrunner.reporting.persistence.dao.mysql.application.GroupMapper.UserResultMap" />
		<collection property="permissions" javaType="java.util.Set"
			ofType="com.zebrunner.reporting.domain.db.Permission"
			resultMap="com.zebrunner.reporting.persistence.dao.mysql.application.PermissionMapper.PermissionResultMap" />
	</resultMap>

	<resultMap type="com.zebrunner.reporting.domain.db.User"
		id="UserResultMap" autoMapping="false">
		<id column="USER_ID" property="id" />
		<result column="USER_USERNAME" property="username" />
		<result column="USER_PASSWORD" property="password" />
		<result column="USER_FIRST_NAME" property="firstName" />
		<result column="USER_LAST_NAME" property="lastName" />
		<result column="USER_EMAIL" property="email" />
		<result column="USER_COVER_PHOTO_URL" property="photoURL" />
		<result column="USER_MODIFIED_AT" property="modifiedAt" />
		<result column="USER_CREATED_AT" property="createdAt" />
	</resultMap>
</mapper>