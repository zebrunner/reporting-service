DROP TABLE IF EXISTS LAUNCHER_CALLBACKS;
DROP TABLE IF EXISTS LAUNCHER_PRESETS;


CREATE TABLE IF NOT EXISTS LAUNCHER_PRESETS (
  ID SERIAL,
  NAME VARCHAR(50) NOT NULL,
  REFERENCE VARCHAR(20) NOT NULL,
  PARAMS TEXT NULL,
  LAUNCHER_ID INT NOT NULL,
  MODIFIED_AT TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CREATED_AT TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (ID),
  CONSTRAINT fk_LAUNCHER_PRESET_LAUNCHERS1
    FOREIGN KEY (LAUNCHER_ID)
    REFERENCES LAUNCHERS (ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);
CREATE UNIQUE INDEX LAUNCHER_PRESET_LAUNCHER_ID_NAME_UNIQUE ON LAUNCHER_PRESETS (NAME, LAUNCHER_ID);
CREATE UNIQUE INDEX LAUNCHER_PRESET_REFERENCE_UNIQUE ON LAUNCHER_PRESETS (REFERENCE);
CREATE TRIGGER update_timestamp_launcher_presets BEFORE INSERT OR UPDATE ON LAUNCHER_PRESETS FOR EACH ROW EXECUTE PROCEDURE update_timestamp();


CREATE TABLE IF NOT EXISTS LAUNCHER_CALLBACKS (
    ID SERIAL,
    CI_RUN_ID VARCHAR(50) NOT NULL,
    URL VARCHAR(255) NOT NULL,
    REFERENCE VARCHAR(20) NOT NULL,
    LAUNCHER_PRESET_ID INT NOT NULL,
    MODIFIED_AT TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CREATED_AT TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (ID),
    CONSTRAINT fk_LAUNCHER_CALLBACK_LAUNCHER_PRESETS1
        FOREIGN KEY (LAUNCHER_PRESET_ID)
            REFERENCES LAUNCHER_PRESETS (ID)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION);
CREATE UNIQUE INDEX LAUNCHER_CALLBACK_CI_RUN_ID_UNIQUE ON LAUNCHER_CALLBACKS (CI_RUN_ID);
CREATE UNIQUE INDEX LAUNCHER_CALLBACK_REFERENCE_UNIQUE ON LAUNCHER_CALLBACKS (REFERENCE);
CREATE TRIGGER update_timestamp_launcher_callback BEFORE INSERT OR UPDATE ON LAUNCHER_CALLBACKS FOR EACH ROW EXECUTE PROCEDURE update_timestamp();